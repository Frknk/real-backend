[project]
name = "real-backend"
version = "0.1.0"
description = "Backend in FastAPI with PostgreSQL, SQLModel, and JWT authentication"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.6",
    "passlib[bcrypt]>=1.7.4",
    "psycopg[binary,pool]>=3.2.3",
    "pytest>=8.4.1",
    "python-dotenv>=1.0.1",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.19",
    "sqlmodel>=0.0.22",
    "uvicorn>=0.33.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.28.1",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests", 
    "auth: marks tests related to authentication",
    "database: marks tests that require database",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
